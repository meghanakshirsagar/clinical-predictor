[
  {
    "objectID": "Patient_Profile_Creation.html",
    "href": "Patient_Profile_Creation.html",
    "title": "Clinical Predictor Tool",
    "section": "",
    "text": "import requests\nimport re\nimport random\n\ndef fetch_clinical_trial_data_v2(nct_id):\n    \"\"\"\n    Fetch clinical trial data from ClinicalTrials.gov API v2 using the NCT ID.\n    \"\"\"\n    base_url = \"https://clinicaltrials.gov/api/v2/studies/\"\n    url = f\"{base_url}{nct_id}\"\n    headers = {\"accept\": \"application/json\"}\n\n    response = requests.get(url, headers=headers)\n\n    if response.status_code == 200:\n        try:\n            return response.json()\n        except requests.exceptions.JSONDecodeError:\n            print(\"Error decoding JSON from the API response.\")\n            return None\n    else:\n        print(f\"Error: Received status code {response.status_code} from ClinicalTrials.gov API v2.\")\n        return None\n\ndef parse_clinical_trial_response(data):\n    \"\"\"\n    Parse the clinical trial response and extract relevant details.\n    \"\"\"\n    try:\n        protocol_section = data.get(\"protocolSection\", {})\n        identification = protocol_section.get(\"identificationModule\", {})\n        eligibility = protocol_section.get(\"eligibilityModule\", {})\n        description = protocol_section.get(\"descriptionModule\", {})\n        conditions = protocol_section.get(\"conditionsModule\", {})\n\n        trial_info = {\n            \"NCT ID\": identification.get(\"nctId\", \"N/A\"),\n            \"Title\": identification.get(\"officialTitle\", \"N/A\"),\n            \"Brief Summary\": description.get(\"briefSummary\", \"N/A\"),\n            \"Eligibility Criteria\": eligibility.get(\"eligibilityCriteria\", \"N/A\"),\n            \"Conditions\": conditions.get(\"conditions\", []),\n        }\n\n        # Parse age range from eligibility criteria\n        age_range = re.search(r\"Age\\s*([^\\n]*)\", trial_info[\"Eligibility Criteria\"])\n        if age_range:\n            trial_info[\"Age Range\"] = age_range.group(1).strip()\n        else:\n            trial_info[\"Age Range\"] = \"18-70\"  # Default age range\n\n        return trial_info\n    except Exception as e:\n        print(f\"Error parsing trial response: {e}\")\n        return None\n\ndef generate_random_patient_profile_from_trial(trial_info):\n    \"\"\"\n    Generate a randomized patient profile based on the clinical trial details.\n    \"\"\"\n    if not trial_info:\n        return \"No valid trial information available to generate a patient profile.\"\n\n    # Parse age range\n    age_range = trial_info.get(\"Age Range\", \"18-70\")\n    age_min, age_max = map(int, re.findall(r\"\\d+\", age_range))\n    age = random.randint(age_min, age_max)\n\n    # Randomize other attributes\n    gender = random.choice([\"Male\", \"Female\"])\n    ecog_status = random.choice([0, 1])  # Assume ECOG &lt;2 based on typical trial criteria\n    treatment_history = random.choice([\n    \"no prior PD-1, PD-L1 or EGFR inhibition\",\n    \"previous systemic therapy for a different indication\",\n\n    # 1\n    \"Oral Cavity Tumor (Stage III): Partial glossectomy + neck dissection; Adjuvant radiation (60 Gy) completed 14 months ago; No prior systemic therapy; No Cetuximab or immunotherapy\",\n\n    # 2\n    \"Laryngeal Cancer (Stage II): Total laryngectomy; Adjuvant radiation (66 Gy) finished 18 months ago; No chemotherapy; No Cetuximab or immunotherapy\",\n\n    # 3\n    \"Oropharyngeal Carcinoma (HPV-): Wide local excision + bilateral neck dissection; Adjuvant radiation (70 Gy) + weekly cisplatin, ended 16 months ago; No EGFR inhibitors or immunotherapy\",\n\n    # 4\n    \"Hypopharyngeal Cancer (Stage IVa): Pharyngectomy; Adjuvant radiation (60 Gy) completed 20 months ago; No concurrent chemo; No Cetuximab or immunotherapy\",\n\n    # 5\n    \"Oral Cavity (Buccal Mucosa): Surgical resection + ipsilateral neck dissection; Adjuvant radiation (66 Gy) finished 13 months ago; No targeted therapies; No immunotherapy\",\n\n    # 6\n    \"Tonsillar Carcinoma (HPV-): Robotic surgery + contralateral neck dissection; Adjuvant radiation (66 Gy) + cisplatin (2 cycles) ended 15 months ago; No prior Cetuximab or checkpoint inhibitors\",\n\n    # 7\n    \"Floor of Mouth Cancer (Stage III): Composite resection + neck dissection; Adjuvant radiation (60 Gy) alone ended 19 months ago; No EGFR-targeted or immunotherapy\",\n\n    # 8\n    \"Oropharyngeal Cancer (T2N1): Surgery + selective neck dissection; Adjuvant radiation (63 Gy) + low-dose carboplatin completed 17 months ago; No Cetuximab or immunotherapy\",\n\n    # 9\n    \"Nasopharyngeal Cancer (Surgically Managed): Endoscopic nasopharyngectomy; Adjuvant radiation (70 Gy) completed 24 months ago; No anti-EGFR or immunotherapy\",\n\n    # 10\n    \"Oral Tongue Tumor (Stage II): Partial glossectomy; Adjuvant radiation (54 Gy) ended 14 months ago; No chemotherapy; Never received Cetuximab or IO therapy\",\n\n    # 11\n    \"Laryngeal Carcinoma (T3N0): Vertical partial laryngectomy; Adjuvant radiation (60 Gy) + weekly cisplatin, finished 13 months ago; No immunotherapy; No anti-EGFR therapy\",\n\n    # 12\n    \"Oropharyngeal Cancer (HPV+, Low Risk): TORS + minimal neck dissection; Adjuvant radiation (50 Gy) completed 15 months ago; No chemo; No Cetuximab or immunotherapy\",\n\n    # 13\n    \"Maxillary Sinus SCC: Maxillectomy + orbital floor reconstruction; Adjuvant radiation (64 Gy) ended 22 months ago; No prior targeted therapy; No immunotherapy\",\n\n    # 14\n    \"Recurrent Oral Tongue Cancer (Salvage Surgery): Initial partial glossectomy + adjuvant radiation 2 years ago; Minor salvage resection 14 months ago; No Cetuximab or immunotherapy\",\n\n    # 15\n    \"Hypopharyngeal (Pyriform Sinus) Lesion: Partial pharyngectomy; Adjuvant radiation (66 Gy) ended 16 months ago; No prior systemic therapy beyond supportive care; No EGFR or IO\",\n\n    # 16\n    \"Oropharyngeal Primary with Single-Node Involvement: Surgery + prophylactic ipsilateral neck dissection; Adjuvant radiation (60 Gy) completed 14 months ago; No chemo; No immunotherapy\",\n\n    # 17\n    \"Oral Cavity Carcinoma (Mandibular Invasion): Marginal mandibulectomy + neck dissection; Adjuvant radiation (70 Gy) + weekly carboplatin ended 18 months ago; No Cetuximab or IO\",\n\n    # 18\n    \"Tonsillar Fossa SCC (HPV-): Tonsillectomy + ipsilateral neck dissection; Adjuvant radiation (66 Gy) completed 13 months ago; No concurrent chemo; no immunotherapy\",\n\n    # 19\n    \"Laryngeal Cancer with Early Recurrence: Initial total laryngectomy + adjuvant radiation 2 years ago; Minor salvage neck dissection 14 months ago; no Cetuximab or IO therapy\",\n\n    # 20\n    \"Lip Squamous Cell Carcinoma (Rare Site): Wide excision + sentinel node biopsy; Adjuvant radiation (50 Gy) finished 12 months ago; No targeted therapies; no immunotherapy\",\n\n    # 21\n    \"Oropharyngeal (Base of Tongue) Cancer: Transoral laser microsurgery; Adjuvant radiation (60 Gy) + low-dose cisplatin ended 15 months ago; No Cetuximab or IO therapy\",\n\n    # 22\n    \"Extensive Oral Cavity Carcinoma: Composite resection with free flap reconstruction; Adjuvant radiation (66 Gy) ended 19 months ago; No adjuvant Cetuximab; No IO therapy\",\n\n    # 23\n    \"Oropharyngeal Carcinoma (HPV+, Intermediate Risk): TORS + bilateral neck dissection; Adjuvant radiation (56 Gy) ended 13 months ago; No chemo; no immunotherapy\",\n\n    # 24\n    \"Oropharynx Cancer (Crossing Midline): Surgery + bilateral neck dissections; Adjuvant radiation (66 Gy) + 2 cycles of cisplatin finished 15 months ago; No EGFR or IO therapy\",\n\n    # 25\n    \"Carcinoma of the Soft Palate: Surgical excision + neck dissection; Adjuvant radiation (60 Gy) completed 14 months ago; No Cetuximab; No immunotherapy\",\n\n    # 26\n    \"Recurrent Oral Tongue Cancer (Second Primary): First primary resected + adjuvant radiation 3 years ago; Second primary resected 2 years ago; No EGFR inhibitors or IO\",\n\n    # 27\n    \"Extensive Tonsillar SCC (HPV-): Surgery (partial pharyngectomy + neck dissection); Adjuvant radiation (64 Gy) ended 20 months ago; No chemo; No immunotherapy\",\n\n    # 28\n    \"Lateral Border of Tongue Lesion: Hemiglossectomy + level I-III neck dissection; Adjuvant radiation (60 Gy) ended 18 months ago; No targeted therapy; No immunotherapy\",\n\n    # 29\n    \"Oropharyngeal SCC (Base of Tongue, T2N2): TORS + bilateral neck dissection; Adjuvant chemo-radiation with weekly carboplatin finished 14 months ago; No Cetuximab or IO\",\n\n    # 30\n    \"Posterior Pharyngeal Wall Tumor: Radical pharyngectomy + reconstruction; Adjuvant radiation (66 Gy) completed 16 months ago; No chemo; No anti-EGFR or IO therapy\",\n])\n    # Randomize medical conditions from trial\n    diagnosis = random.choice(trial_info['Conditions']) if trial_info['Conditions'] else \"Head and Neck Squamous Cell Carcinoma\"\n\n    # Structured profile\n    profile = {\n        \"Age\": age,\n        \"Gender\": gender,\n        \"Diagnosis\": diagnosis,\n        \"ECOGPerformanceStatus\": ecog_status,\n        \"TreatmentHistory\": treatment_history\n    }\n    return profile\n\ndef display_trial_info_and_profile(trial_info, patient_profile):\n    \"\"\"\n    Display the parsed clinical trial information and the generated patient profile.\n    \"\"\"\n    if not trial_info:\n        print(\"No valid trial information found.\")\n        return\n\n    print(\"Generated Patient Profile:\\n\")\n    for key, value in patient_profile.items():\n        print(f\"{key}: {value}\")\n\nif __name__ == \"__main__\":\n    # nct_id = input(\"Enter the NCT Clinical Trial ID: \").strip()\n    nct_id = \"NCT02268695\"\n\n    trial_data = fetch_clinical_trial_data_v2(nct_id)\n\n    if trial_data:\n        trial_info = parse_clinical_trial_response(trial_data)\n        patient_profile = generate_random_patient_profile_from_trial(trial_info)\n        display_trial_info_and_profile(trial_info, patient_profile)\n    else:\n        print(f\"No data found for NCT ID {nct_id}. Please verify the ID or try again later.\")\n\nGenerated Patient Profile:\n\nAge: 37\nGender: Male\nDiagnosis: Head and Neck Squamous Cell Carcinoma\nECOGPerformanceStatus: 1\nTreatmentHistory: previous systemic therapy for a different indication"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Clinical Predictor Tool",
    "section": "",
    "text": "Limerick Digital Cancer Research Centre\nDeveloped by: Meghana Kshirsagar and Gauri Vaidya\nThis project is a proof-of-concept of treatment personalization for patients with Head and Neck Squamous Cell Carcinoma (HNSCC) using structured outcomes from completed clinical trials with Large Language Models (LLMs).\nIt consists of two key components: one for generating patient profiles, and another for relevant treatment recommendations learned from trial outcome data."
  },
  {
    "objectID": "index.html#project-components",
    "href": "index.html#project-components",
    "title": "Clinical Predictor Tool",
    "section": "Project Components",
    "text": "Project Components\n\nPatient Profile Creation\nGenerates a patient profile using a specified clinical trial ID.\nTreatment Recommendation\nRecommend treatments by analyzing trial outcomes in the context of the generated patient profile."
  },
  {
    "objectID": "index.html#usage-instructions",
    "href": "index.html#usage-instructions",
    "title": "Clinical Predictor Tool",
    "section": "Usage Instructions",
    "text": "Usage Instructions\n\nFor demonstration purposes, this tool uses the clinical trial ID NCT02268695. However, users are encouraged to explore additional completed trials by selecting different NCT IDs from clinicaltrials.gov.\nOpen the Patient_Profile_Creation notebook and substitute the nct_id with any other and run all cells to generate a patient profile based on the selected clinical trial.\nCopy the generated patient profile and paste it into the Patient_Profile_Treatment_Recommendation notebook.\nRun the treatment recommendation notebook to receive a personalized recommendation based on trial outcome data."
  },
  {
    "objectID": "index.html#required-libraries",
    "href": "index.html#required-libraries",
    "title": "Clinical Predictor Tool",
    "section": "Required Libraries",
    "text": "Required Libraries\n\nlangchain\n\nlangchain_community\n\nneo4j\n\ntransformers\n\n\nUse the navigation bar to explore the notebooks."
  },
  {
    "objectID": "Patient_Profile_Treatment_Recommendation.html",
    "href": "Patient_Profile_Treatment_Recommendation.html",
    "title": "Clinical Predictor Tool",
    "section": "",
    "text": "from transformers import pipeline\nfrom langchain.graphs import Neo4jGraph\nfrom langchain.chains import GraphCypherQAChain\nfrom transformers import AutoTokenizer, AutoModelForSeq2SeqLM\nfrom neo4j import GraphDatabase\nimport re\nimport textwrap\nimport json\n\n\nURI = \"neo4j+s://08398cf2.databases.neo4j.io\"\nUSERNAME = \"neo4j\"\nPASSWORD = \"fVDb3eipO3R4HrPyPhaZLYSI4jpQRN60OUUBeBP-Eao\"\n\n\nimport textwrap\nfrom transformers import AutoTokenizer, AutoModelForSeq2SeqLM\n\n################################################################################\n# 1) LOCAL KNOWLEDGE GRAPH\n################################################################################\n\nlocal_kg = {\n    \"diagnoses\": {\n        \"Head and Neck Squamous Cell Carcinoma\": {\n            \"inclusion_criteria\": [\n                \"Age 18-70 years\",\n                \"ECOG performance status 0 or 1\",\n                \"no prior PD-1, PD-L1 or EGFR inhibition\",\n                \"No immunotherapy\"\n            ],\n            \"study_groups\": {\n                \"TPEx group\": {\n                    \"regimen\": {\n                        \"regimenId\": \"TPEx\",\n                        \"includesAgents\": [\n                            \"Docetaxel 75 mg/m^2 (day 1)\",\n                            \"Cisplatin 75 mg/m^2 (day 1)\",\n                            \"Cetuximab 400 mg/m^2 (cycle 1, day 1), then 250 mg/m^2 weekly\"\n                        ],\n                        \"cycleLength\": \"21 days\",\n                        \"numberOfCycles\": \"Up to 4 cycles\",\n                        \"requiresGCSF\": True,\n                        \"maintenanceTherapy\": True\n                    }\n                },\n                \"EXTREME group\": {\n                    \"regimen\": {\n                        \"regimenId\": \"EXTREME\",\n                        \"includesAgents\": [\n                            \"Fluorouracil 4000 mg/m^2 (days 1-4)\",\n                            \"Cisplatin 100 mg/m^2 (day 1)\",\n                            \"Cetuximab 400 mg/m^2 (cycle 1, day 1), then 250 mg/m^2 weekly\"\n                        ],\n                        \"cycleLength\": \"21 days\",\n                        \"numberOfCycles\": \"Up to 6 cycles\",\n                        \"requiresGCSF\": False,\n                        \"maintenanceTherapy\": True\n                    }\n                }\n            }\n        }\n    }\n}\n\n################################################################################\n# 2) MODEL LOADING (SEQUENCE-TO-SEQUENCE)\n################################################################################\n\nmodel_name = \"google/flan-t5-base\"\ntokenizer = AutoTokenizer.from_pretrained(model_name)\nmodel = AutoModelForSeq2SeqLM.from_pretrained(model_name)\n\n################################################################################\n# 3) PROFILE PROCESSING & LOCAL QUERY\n################################################################################\n\ndef process_patient_profile(profile: str) -&gt; dict:\n    profile_lines = profile.split(\"\\n\")\n    patient_data = {}\n\n    for line in profile_lines:\n        line = line.strip()\n        if line.startswith(\"Age:\"):\n            age_value = line.split(\":\", 1)[1].strip()\n            patient_data[\"age\"] = int(age_value) if age_value.isdigit() else None\n        elif line.startswith(\"Gender:\"):\n            patient_data[\"gender\"] = line.split(\":\", 1)[1].strip()\n        elif line.startswith(\"Diagnosis:\"):\n            patient_data[\"diagnosis\"] = line.split(\":\", 1)[1].strip()\n        elif line.startswith(\"ECOGPerformanceStatus:\"):\n            ecog_value = line.split(\":\", 1)[1].strip()\n            patient_data[\"ecog\"] = int(ecog_value) if ecog_value.isdigit() else None\n        elif line.startswith(\"TreatmentHistory:\"):\n            treatment_history = line.split(\":\", 1)[1].strip().lower()\n            patient_data[\"treatment_history\"] = \"no prior\" in treatment_history or \"never received\" in treatment_history\n\n    has_required_fields = (\n        patient_data.get(\"ecog\") is not None and\n        patient_data.get(\"age\") is not None and\n        patient_data.get(\"diagnosis\") is not None\n    )\n\n    if has_required_fields:\n        patient_data[\"eligible\"] = (\n            (patient_data[\"ecog\"] &lt; 2) and\n            (18 &lt;= patient_data[\"age\"] &lt;= 70) and\n            (patient_data[\"diagnosis\"] in local_kg[\"diagnoses\"])\n        )\n    else:\n        patient_data[\"eligible\"] = False\n\n    return patient_data\n\n\ndef run_local_query(profile_data: dict) -&gt; list:\n    results = []\n    diagnosis = profile_data.get(\"diagnosis\")\n    if not profile_data.get(\"eligible\"):\n        return results\n\n    diag_info = local_kg[\"diagnoses\"].get(diagnosis)\n    criteria = diag_info[\"inclusion_criteria\"]\n    required_criteria = [\n        \"Age 18-70 years\",\n        \"ECOG performance status 0 or 1\",\n        \"no prior PD-1, PD-L1 or EGFR inhibition\",\n        \"No immunotherapy\"\n    ]\n\n    if all(req in criteria for req in required_criteria):\n        for group, data in diag_info[\"study_groups\"].items():\n            results.append(data[\"regimen\"])\n\n    return results\n\n################################################################################\n# 4) LLM-BASED RESPONSE\n################################################################################\n\ndef generate_llm_response(query_results: list) -&gt; str:\n    if not query_results:\n        return \"No results found or the patient is ineligible for treatment recommendations.\"\n\n    result_str = \"\\n\".join(\n        f\"- Regimen ID: {r['regimenId']}, Agents: {r['includesAgents']}, Cycle Length: {r['cycleLength']}, \"\n        f\"Cycles: {r['numberOfCycles']}, GCSF Required: {'Yes' if r['requiresGCSF'] else 'No'}, \"\n        f\"Maintenance Therapy: {'Yes' if r['maintenanceTherapy'] else 'No'}\"\n        for r in query_results\n    )\n\n    prompt = f\"\"\"\n    You are a clinical data expert. Based on the following structured query results, write a natural language response\n    summarizing the recommended treatment regimens for a patient:\n\n    Results:\n    {result_str}\n\n    Response:\n    \"\"\"\n    inputs = tokenizer.encode(prompt, return_tensors=\"pt\", max_length=512, truncation=True)\n    outputs = model.generate(inputs, max_length=200, num_beams=5, early_stopping=True)\n    return tokenizer.decode(outputs[0], skip_special_tokens=True).strip()\n\n################################################################################\n# 5) MAIN PIPELINE\n################################################################################\n\ndef main():\n    patient_profile = \"\"\"\n    Age: 58\n    Gender: Female\n    Diagnosis: Head and Neck Squamous Cell Carcinoma\n    ECOGPerformanceStatus: 1\n    TreatmentHistory: Oral Tongue Tumor (Stage II): Partial glossectomy; Adjuvant radiation (54 Gy) ended 14 months ago; No chemotherapy; Never received Cetuximab or IO therapy\n    \"\"\"\n\n    profile_data = process_patient_profile(patient_profile)\n    formatted_profile = textwrap.fill(\n    json.dumps(profile_data, indent=2), width=100)\n    print(\"Processed Patient Profile:\\n\")\n    print(formatted_profile)\n\n\n    results = run_local_query(profile_data)\n    # print(\"\\nStructured Query Results:\")\n    # for r in results:\n    #     print(r)\n\n    response = generate_llm_response(results)\n    formatted_response = textwrap.fill(response, width=100)\n    print(\"\\nHere is the treatment recommendation:\\n\")\n    print(formatted_response)\n\nif __name__ == \"__main__\":\n    main()\n\nProcessed Patient Profile:\n\n{   \"age\": 58,   \"gender\": \"Female\",   \"diagnosis\": \"Head and Neck Squamous Cell Carcinoma\",\n\"ecog\": 1,   \"treatment_history\": true,   \"eligible\": true }\n\nHere is the treatment recommendation:\n\n['Docetaxel 75 mg/m2 (day 1)', 'Cisplatin 75 mg/m2 (day 1)', 'Cetuximab 400 mg/m2 (day 1), then 250\nmg/m2 weekly']"
  }
]